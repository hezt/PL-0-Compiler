Grammar

    0 $accept: prog $end

    1 prog: b_prog point_s

    2 b_prog: sentence
    3       | const_dclr var_dclr proc_dclr sentence
    4       | const_dclr var_dclr sentence
    5       | var_dclr proc_dclr sentence
    6       | const_dclr proc_dclr sentence
    7       | const_dclr sentence
    8       | var_dclr sentence
    9       | proc_dclr sentence

   10 const_dclr: const_k mul_const_def semicolon_s

   11 mul_const_def: const_def
   12              | const_def comma_s mul_const_def

   13 const_def: identifier eq_s integer

   14 var_dclr: var_k mul_var_dclr semicolon_s

   15 mul_var_dclr: identifier
   16             | identifier comma_s mul_var_dclr

   17 proc_dclr: proc_header b_prog mul_proc_dclr

   18 mul_proc_dclr: semicolon_s
   19              | semicolon_s proc_dclr mul_proc_dclr

   20 proc_header: procedure_k identifier semicolon_s

   21 sentence: assign_sen
   22         | condition_sen
   23         | while_sen
   24         | proccall_sen
   25         | read_sen
   26         | write_sen
   27         | mul_sen
   28         | empty_sen

   29 assign_sen: identifier assign_s expression

   30 mul_sen: begin_k mul_mul_sen end_k

   31 mul_mul_sen: sentence
   32            | sentence semicolon_s mul_mul_sen

   33 empty_sen: /* empty */

   34 condition: expression relation_op expression
   35          | odd_k expression

   36 expression: p_m_op mul_expression
   37           | mul_expression

   38 mul_expression: item
   39               | item p_m_op mul_expression

   40 item: mul_item

   41 mul_item: factor
   42         | factor m_d_op mul_item

   43 factor: identifier
   44       | integer
   45       | l_bracket_s expression r_bracket_s

   46 p_m_op: plus_s
   47       | minus_s

   48 m_d_op: multiple_s
   49       | divide_s

   50 relation_op: eq_s
   51            | neq_s
   52            | gtr_s
   53            | gtr_eq_s
   54            | less_s
   55            | less_eq_s

   56 condition_sen: if_k condition then_k sentence

   57 proccall_sen: call_k identifier

   58 while_sen: while_k condition do_k sentence

   59 read_sen: read_k l_bracket_s mul_read_sen r_bracket_s

   60 mul_read_sen: identifier
   61             | identifier comma_s mul_read_sen

   62 write_sen: write_k l_bracket_s mul_write_sen r_bracket_s

   63 mul_write_sen: expression
   64              | expression comma_s mul_write_sen


Terminals, with rules where they appear

$end (0) 0
error (256)
integer (258) 13 44
identifier (259) 13 15 16 20 29 43 57 60 61
const_k (260) 10
var_k (261) 14
procedure_k (262) 20
begin_k (263) 30
end_k (264) 30
odd_k (265) 35
if_k (266) 56
then_k (267) 56
call_k (268) 57
while_k (269) 58
do_k (270) 58
read_k (271) 59
write_k (272) 62
point_s (273) 1
comma_s (274) 12 16 61 64
semicolon_s (275) 10 14 18 19 20 32
assign_s (276) 29
plus_s (277) 46
minus_s (278) 47
multiple_s (279) 48
divide_s (280) 49
eq_s (281) 13 50
neq_s (282) 51
gtr_s (283) 52
gtr_eq_s (284) 53
less_s (285) 54
less_eq_s (286) 55
l_bracket_s (287) 45 59 62
r_bracket_s (288) 45 59 62


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
prog (35)
    on left: 1, on right: 0
b_prog (36)
    on left: 2 3 4 5 6 7 8 9, on right: 1 17
const_dclr (37)
    on left: 10, on right: 3 4 6 7
mul_const_def (38)
    on left: 11 12, on right: 10 12
const_def (39)
    on left: 13, on right: 11 12
var_dclr (40)
    on left: 14, on right: 3 4 5 8
mul_var_dclr (41)
    on left: 15 16, on right: 14 16
proc_dclr (42)
    on left: 17, on right: 3 5 6 9 19
mul_proc_dclr (43)
    on left: 18 19, on right: 17 19
proc_header (44)
    on left: 20, on right: 17
sentence (45)
    on left: 21 22 23 24 25 26 27 28, on right: 2 3 4 5 6 7 8 9 31
    32 56 58
assign_sen (46)
    on left: 29, on right: 21
mul_sen (47)
    on left: 30, on right: 27
mul_mul_sen (48)
    on left: 31 32, on right: 30 32
empty_sen (49)
    on left: 33, on right: 28
condition (50)
    on left: 34 35, on right: 56 58
expression (51)
    on left: 36 37, on right: 29 34 35 45 63 64
mul_expression (52)
    on left: 38 39, on right: 36 37 39
item (53)
    on left: 40, on right: 38 39
mul_item (54)
    on left: 41 42, on right: 40 42
factor (55)
    on left: 43 44 45, on right: 41 42
p_m_op (56)
    on left: 46 47, on right: 36 39
m_d_op (57)
    on left: 48 49, on right: 42
relation_op (58)
    on left: 50 51 52 53 54 55, on right: 34
condition_sen (59)
    on left: 56, on right: 22
proccall_sen (60)
    on left: 57, on right: 24
while_sen (61)
    on left: 58, on right: 23
read_sen (62)
    on left: 59, on right: 25
mul_read_sen (63)
    on left: 60 61, on right: 59 61
write_sen (64)
    on left: 62, on right: 26
mul_write_sen (65)
    on left: 63 64, on right: 62 64


state 0

    0 $accept: . prog $end

    identifier   shift, and go to state 1
    const_k      shift, and go to state 2
    var_k        shift, and go to state 3
    procedure_k  shift, and go to state 4
    begin_k      shift, and go to state 5
    if_k         shift, and go to state 6
    call_k       shift, and go to state 7
    while_k      shift, and go to state 8
    read_k       shift, and go to state 9
    write_k      shift, and go to state 10

    $default  reduce using rule 33 (empty_sen)

    prog           go to state 11
    b_prog         go to state 12
    const_dclr     go to state 13
    var_dclr       go to state 14
    proc_dclr      go to state 15
    proc_header    go to state 16
    sentence       go to state 17
    assign_sen     go to state 18
    mul_sen        go to state 19
    empty_sen      go to state 20
    condition_sen  go to state 21
    proccall_sen   go to state 22
    while_sen      go to state 23
    read_sen       go to state 24
    write_sen      go to state 25


state 1

   29 assign_sen: identifier . assign_s expression

    assign_s  shift, and go to state 26


state 2

   10 const_dclr: const_k . mul_const_def semicolon_s

    identifier  shift, and go to state 27

    mul_const_def  go to state 28
    const_def      go to state 29


state 3

   14 var_dclr: var_k . mul_var_dclr semicolon_s

    identifier  shift, and go to state 30

    mul_var_dclr  go to state 31


state 4

   20 proc_header: procedure_k . identifier semicolon_s

    identifier  shift, and go to state 32


state 5

   30 mul_sen: begin_k . mul_mul_sen end_k

    identifier  shift, and go to state 1
    begin_k     shift, and go to state 5
    if_k        shift, and go to state 6
    call_k      shift, and go to state 7
    while_k     shift, and go to state 8
    read_k      shift, and go to state 9
    write_k     shift, and go to state 10

    $default  reduce using rule 33 (empty_sen)

    sentence       go to state 33
    assign_sen     go to state 18
    mul_sen        go to state 19
    mul_mul_sen    go to state 34
    empty_sen      go to state 20
    condition_sen  go to state 21
    proccall_sen   go to state 22
    while_sen      go to state 23
    read_sen       go to state 24
    write_sen      go to state 25


state 6

   56 condition_sen: if_k . condition then_k sentence

    integer      shift, and go to state 35
    identifier   shift, and go to state 36
    odd_k        shift, and go to state 37
    plus_s       shift, and go to state 38
    minus_s      shift, and go to state 39
    l_bracket_s  shift, and go to state 40

    condition       go to state 41
    expression      go to state 42
    mul_expression  go to state 43
    item            go to state 44
    mul_item        go to state 45
    factor          go to state 46
    p_m_op          go to state 47


state 7

   57 proccall_sen: call_k . identifier

    identifier  shift, and go to state 48


state 8

   58 while_sen: while_k . condition do_k sentence

    integer      shift, and go to state 35
    identifier   shift, and go to state 36
    odd_k        shift, and go to state 37
    plus_s       shift, and go to state 38
    minus_s      shift, and go to state 39
    l_bracket_s  shift, and go to state 40

    condition       go to state 49
    expression      go to state 42
    mul_expression  go to state 43
    item            go to state 44
    mul_item        go to state 45
    factor          go to state 46
    p_m_op          go to state 47


state 9

   59 read_sen: read_k . l_bracket_s mul_read_sen r_bracket_s

    l_bracket_s  shift, and go to state 50


state 10

   62 write_sen: write_k . l_bracket_s mul_write_sen r_bracket_s

    l_bracket_s  shift, and go to state 51


state 11

    0 $accept: prog . $end

    $end  shift, and go to state 52


state 12

    1 prog: b_prog . point_s

    point_s  shift, and go to state 53


state 13

    3 b_prog: const_dclr . var_dclr proc_dclr sentence
    4       | const_dclr . var_dclr sentence
    6       | const_dclr . proc_dclr sentence
    7       | const_dclr . sentence

    identifier   shift, and go to state 1
    var_k        shift, and go to state 3
    procedure_k  shift, and go to state 4
    begin_k      shift, and go to state 5
    if_k         shift, and go to state 6
    call_k       shift, and go to state 7
    while_k      shift, and go to state 8
    read_k       shift, and go to state 9
    write_k      shift, and go to state 10

    $default  reduce using rule 33 (empty_sen)

    var_dclr       go to state 54
    proc_dclr      go to state 55
    proc_header    go to state 16
    sentence       go to state 56
    assign_sen     go to state 18
    mul_sen        go to state 19
    empty_sen      go to state 20
    condition_sen  go to state 21
    proccall_sen   go to state 22
    while_sen      go to state 23
    read_sen       go to state 24
    write_sen      go to state 25


state 14

    5 b_prog: var_dclr . proc_dclr sentence
    8       | var_dclr . sentence

    identifier   shift, and go to state 1
    procedure_k  shift, and go to state 4
    begin_k      shift, and go to state 5
    if_k         shift, and go to state 6
    call_k       shift, and go to state 7
    while_k      shift, and go to state 8
    read_k       shift, and go to state 9
    write_k      shift, and go to state 10

    $default  reduce using rule 33 (empty_sen)

    proc_dclr      go to state 57
    proc_header    go to state 16
    sentence       go to state 58
    assign_sen     go to state 18
    mul_sen        go to state 19
    empty_sen      go to state 20
    condition_sen  go to state 21
    proccall_sen   go to state 22
    while_sen      go to state 23
    read_sen       go to state 24
    write_sen      go to state 25


state 15

    9 b_prog: proc_dclr . sentence

    identifier  shift, and go to state 1
    begin_k     shift, and go to state 5
    if_k        shift, and go to state 6
    call_k      shift, and go to state 7
    while_k     shift, and go to state 8
    read_k      shift, and go to state 9
    write_k     shift, and go to state 10

    $default  reduce using rule 33 (empty_sen)

    sentence       go to state 59
    assign_sen     go to state 18
    mul_sen        go to state 19
    empty_sen      go to state 20
    condition_sen  go to state 21
    proccall_sen   go to state 22
    while_sen      go to state 23
    read_sen       go to state 24
    write_sen      go to state 25


state 16

   17 proc_dclr: proc_header . b_prog mul_proc_dclr

    identifier   shift, and go to state 1
    const_k      shift, and go to state 2
    var_k        shift, and go to state 3
    procedure_k  shift, and go to state 4
    begin_k      shift, and go to state 5
    if_k         shift, and go to state 6
    call_k       shift, and go to state 7
    while_k      shift, and go to state 8
    read_k       shift, and go to state 9
    write_k      shift, and go to state 10

    $default  reduce using rule 33 (empty_sen)

    b_prog         go to state 60
    const_dclr     go to state 13
    var_dclr       go to state 14
    proc_dclr      go to state 15
    proc_header    go to state 16
    sentence       go to state 17
    assign_sen     go to state 18
    mul_sen        go to state 19
    empty_sen      go to state 20
    condition_sen  go to state 21
    proccall_sen   go to state 22
    while_sen      go to state 23
    read_sen       go to state 24
    write_sen      go to state 25


state 17

    2 b_prog: sentence .

    $default  reduce using rule 2 (b_prog)


state 18

   21 sentence: assign_sen .

    $default  reduce using rule 21 (sentence)


state 19

   27 sentence: mul_sen .

    $default  reduce using rule 27 (sentence)


state 20

   28 sentence: empty_sen .

    $default  reduce using rule 28 (sentence)


state 21

   22 sentence: condition_sen .

    $default  reduce using rule 22 (sentence)


state 22

   24 sentence: proccall_sen .

    $default  reduce using rule 24 (sentence)


state 23

   23 sentence: while_sen .

    $default  reduce using rule 23 (sentence)


state 24

   25 sentence: read_sen .

    $default  reduce using rule 25 (sentence)


state 25

   26 sentence: write_sen .

    $default  reduce using rule 26 (sentence)


state 26

   29 assign_sen: identifier assign_s . expression

    integer      shift, and go to state 35
    identifier   shift, and go to state 36
    plus_s       shift, and go to state 38
    minus_s      shift, and go to state 39
    l_bracket_s  shift, and go to state 40

    expression      go to state 61
    mul_expression  go to state 43
    item            go to state 44
    mul_item        go to state 45
    factor          go to state 46
    p_m_op          go to state 47


state 27

   13 const_def: identifier . eq_s integer

    eq_s  shift, and go to state 62


state 28

   10 const_dclr: const_k mul_const_def . semicolon_s

    semicolon_s  shift, and go to state 63


state 29

   11 mul_const_def: const_def .
   12              | const_def . comma_s mul_const_def

    comma_s  shift, and go to state 64

    $default  reduce using rule 11 (mul_const_def)


state 30

   15 mul_var_dclr: identifier .
   16             | identifier . comma_s mul_var_dclr

    comma_s  shift, and go to state 65

    $default  reduce using rule 15 (mul_var_dclr)


state 31

   14 var_dclr: var_k mul_var_dclr . semicolon_s

    semicolon_s  shift, and go to state 66


state 32

   20 proc_header: procedure_k identifier . semicolon_s

    semicolon_s  shift, and go to state 67


state 33

   31 mul_mul_sen: sentence .
   32            | sentence . semicolon_s mul_mul_sen

    semicolon_s  shift, and go to state 68

    $default  reduce using rule 31 (mul_mul_sen)


state 34

   30 mul_sen: begin_k mul_mul_sen . end_k

    end_k  shift, and go to state 69


state 35

   44 factor: integer .

    $default  reduce using rule 44 (factor)


state 36

   43 factor: identifier .

    $default  reduce using rule 43 (factor)


state 37

   35 condition: odd_k . expression

    integer      shift, and go to state 35
    identifier   shift, and go to state 36
    plus_s       shift, and go to state 38
    minus_s      shift, and go to state 39
    l_bracket_s  shift, and go to state 40

    expression      go to state 70
    mul_expression  go to state 43
    item            go to state 44
    mul_item        go to state 45
    factor          go to state 46
    p_m_op          go to state 47


state 38

   46 p_m_op: plus_s .

    $default  reduce using rule 46 (p_m_op)


state 39

   47 p_m_op: minus_s .

    $default  reduce using rule 47 (p_m_op)


state 40

   45 factor: l_bracket_s . expression r_bracket_s

    integer      shift, and go to state 35
    identifier   shift, and go to state 36
    plus_s       shift, and go to state 38
    minus_s      shift, and go to state 39
    l_bracket_s  shift, and go to state 40

    expression      go to state 71
    mul_expression  go to state 43
    item            go to state 44
    mul_item        go to state 45
    factor          go to state 46
    p_m_op          go to state 47


state 41

   56 condition_sen: if_k condition . then_k sentence

    then_k  shift, and go to state 72


state 42

   34 condition: expression . relation_op expression

    eq_s       shift, and go to state 73
    neq_s      shift, and go to state 74
    gtr_s      shift, and go to state 75
    gtr_eq_s   shift, and go to state 76
    less_s     shift, and go to state 77
    less_eq_s  shift, and go to state 78

    relation_op  go to state 79


state 43

   37 expression: mul_expression .

    $default  reduce using rule 37 (expression)


state 44

   38 mul_expression: item .
   39               | item . p_m_op mul_expression

    plus_s   shift, and go to state 38
    minus_s  shift, and go to state 39

    $default  reduce using rule 38 (mul_expression)

    p_m_op  go to state 80


state 45

   40 item: mul_item .

    $default  reduce using rule 40 (item)


state 46

   41 mul_item: factor .
   42         | factor . m_d_op mul_item

    multiple_s  shift, and go to state 81
    divide_s    shift, and go to state 82

    $default  reduce using rule 41 (mul_item)

    m_d_op  go to state 83


state 47

   36 expression: p_m_op . mul_expression

    integer      shift, and go to state 35
    identifier   shift, and go to state 36
    l_bracket_s  shift, and go to state 40

    mul_expression  go to state 84
    item            go to state 44
    mul_item        go to state 45
    factor          go to state 46


state 48

   57 proccall_sen: call_k identifier .

    $default  reduce using rule 57 (proccall_sen)


state 49

   58 while_sen: while_k condition . do_k sentence

    do_k  shift, and go to state 85


state 50

   59 read_sen: read_k l_bracket_s . mul_read_sen r_bracket_s

    identifier  shift, and go to state 86

    mul_read_sen  go to state 87


state 51

   62 write_sen: write_k l_bracket_s . mul_write_sen r_bracket_s

    integer      shift, and go to state 35
    identifier   shift, and go to state 36
    plus_s       shift, and go to state 38
    minus_s      shift, and go to state 39
    l_bracket_s  shift, and go to state 40

    expression      go to state 88
    mul_expression  go to state 43
    item            go to state 44
    mul_item        go to state 45
    factor          go to state 46
    p_m_op          go to state 47
    mul_write_sen   go to state 89


state 52

    0 $accept: prog $end .

    $default  accept


state 53

    1 prog: b_prog point_s .

    $default  reduce using rule 1 (prog)


state 54

    3 b_prog: const_dclr var_dclr . proc_dclr sentence
    4       | const_dclr var_dclr . sentence

    identifier   shift, and go to state 1
    procedure_k  shift, and go to state 4
    begin_k      shift, and go to state 5
    if_k         shift, and go to state 6
    call_k       shift, and go to state 7
    while_k      shift, and go to state 8
    read_k       shift, and go to state 9
    write_k      shift, and go to state 10

    $default  reduce using rule 33 (empty_sen)

    proc_dclr      go to state 90
    proc_header    go to state 16
    sentence       go to state 91
    assign_sen     go to state 18
    mul_sen        go to state 19
    empty_sen      go to state 20
    condition_sen  go to state 21
    proccall_sen   go to state 22
    while_sen      go to state 23
    read_sen       go to state 24
    write_sen      go to state 25


state 55

    6 b_prog: const_dclr proc_dclr . sentence

    identifier  shift, and go to state 1
    begin_k     shift, and go to state 5
    if_k        shift, and go to state 6
    call_k      shift, and go to state 7
    while_k     shift, and go to state 8
    read_k      shift, and go to state 9
    write_k     shift, and go to state 10

    $default  reduce using rule 33 (empty_sen)

    sentence       go to state 92
    assign_sen     go to state 18
    mul_sen        go to state 19
    empty_sen      go to state 20
    condition_sen  go to state 21
    proccall_sen   go to state 22
    while_sen      go to state 23
    read_sen       go to state 24
    write_sen      go to state 25


state 56

    7 b_prog: const_dclr sentence .

    $default  reduce using rule 7 (b_prog)


state 57

    5 b_prog: var_dclr proc_dclr . sentence

    identifier  shift, and go to state 1
    begin_k     shift, and go to state 5
    if_k        shift, and go to state 6
    call_k      shift, and go to state 7
    while_k     shift, and go to state 8
    read_k      shift, and go to state 9
    write_k     shift, and go to state 10

    $default  reduce using rule 33 (empty_sen)

    sentence       go to state 93
    assign_sen     go to state 18
    mul_sen        go to state 19
    empty_sen      go to state 20
    condition_sen  go to state 21
    proccall_sen   go to state 22
    while_sen      go to state 23
    read_sen       go to state 24
    write_sen      go to state 25


state 58

    8 b_prog: var_dclr sentence .

    $default  reduce using rule 8 (b_prog)


state 59

    9 b_prog: proc_dclr sentence .

    $default  reduce using rule 9 (b_prog)


state 60

   17 proc_dclr: proc_header b_prog . mul_proc_dclr

    semicolon_s  shift, and go to state 94

    mul_proc_dclr  go to state 95


state 61

   29 assign_sen: identifier assign_s expression .

    $default  reduce using rule 29 (assign_sen)


state 62

   13 const_def: identifier eq_s . integer

    integer  shift, and go to state 96


state 63

   10 const_dclr: const_k mul_const_def semicolon_s .

    $default  reduce using rule 10 (const_dclr)


state 64

   12 mul_const_def: const_def comma_s . mul_const_def

    identifier  shift, and go to state 27

    mul_const_def  go to state 97
    const_def      go to state 29


state 65

   16 mul_var_dclr: identifier comma_s . mul_var_dclr

    identifier  shift, and go to state 30

    mul_var_dclr  go to state 98


state 66

   14 var_dclr: var_k mul_var_dclr semicolon_s .

    $default  reduce using rule 14 (var_dclr)


state 67

   20 proc_header: procedure_k identifier semicolon_s .

    $default  reduce using rule 20 (proc_header)


state 68

   32 mul_mul_sen: sentence semicolon_s . mul_mul_sen

    identifier  shift, and go to state 1
    begin_k     shift, and go to state 5
    if_k        shift, and go to state 6
    call_k      shift, and go to state 7
    while_k     shift, and go to state 8
    read_k      shift, and go to state 9
    write_k     shift, and go to state 10

    $default  reduce using rule 33 (empty_sen)

    sentence       go to state 33
    assign_sen     go to state 18
    mul_sen        go to state 19
    mul_mul_sen    go to state 99
    empty_sen      go to state 20
    condition_sen  go to state 21
    proccall_sen   go to state 22
    while_sen      go to state 23
    read_sen       go to state 24
    write_sen      go to state 25


state 69

   30 mul_sen: begin_k mul_mul_sen end_k .

    $default  reduce using rule 30 (mul_sen)


state 70

   35 condition: odd_k expression .

    $default  reduce using rule 35 (condition)


state 71

   45 factor: l_bracket_s expression . r_bracket_s

    r_bracket_s  shift, and go to state 100


state 72

   56 condition_sen: if_k condition then_k . sentence

    identifier  shift, and go to state 1
    begin_k     shift, and go to state 5
    if_k        shift, and go to state 6
    call_k      shift, and go to state 7
    while_k     shift, and go to state 8
    read_k      shift, and go to state 9
    write_k     shift, and go to state 10

    $default  reduce using rule 33 (empty_sen)

    sentence       go to state 101
    assign_sen     go to state 18
    mul_sen        go to state 19
    empty_sen      go to state 20
    condition_sen  go to state 21
    proccall_sen   go to state 22
    while_sen      go to state 23
    read_sen       go to state 24
    write_sen      go to state 25


state 73

   50 relation_op: eq_s .

    $default  reduce using rule 50 (relation_op)


state 74

   51 relation_op: neq_s .

    $default  reduce using rule 51 (relation_op)


state 75

   52 relation_op: gtr_s .

    $default  reduce using rule 52 (relation_op)


state 76

   53 relation_op: gtr_eq_s .

    $default  reduce using rule 53 (relation_op)


state 77

   54 relation_op: less_s .

    $default  reduce using rule 54 (relation_op)


state 78

   55 relation_op: less_eq_s .

    $default  reduce using rule 55 (relation_op)


state 79

   34 condition: expression relation_op . expression

    integer      shift, and go to state 35
    identifier   shift, and go to state 36
    plus_s       shift, and go to state 38
    minus_s      shift, and go to state 39
    l_bracket_s  shift, and go to state 40

    expression      go to state 102
    mul_expression  go to state 43
    item            go to state 44
    mul_item        go to state 45
    factor          go to state 46
    p_m_op          go to state 47


state 80

   39 mul_expression: item p_m_op . mul_expression

    integer      shift, and go to state 35
    identifier   shift, and go to state 36
    l_bracket_s  shift, and go to state 40

    mul_expression  go to state 103
    item            go to state 44
    mul_item        go to state 45
    factor          go to state 46


state 81

   48 m_d_op: multiple_s .

    $default  reduce using rule 48 (m_d_op)


state 82

   49 m_d_op: divide_s .

    $default  reduce using rule 49 (m_d_op)


state 83

   42 mul_item: factor m_d_op . mul_item

    integer      shift, and go to state 35
    identifier   shift, and go to state 36
    l_bracket_s  shift, and go to state 40

    mul_item  go to state 104
    factor    go to state 46


state 84

   36 expression: p_m_op mul_expression .

    $default  reduce using rule 36 (expression)


state 85

   58 while_sen: while_k condition do_k . sentence

    identifier  shift, and go to state 1
    begin_k     shift, and go to state 5
    if_k        shift, and go to state 6
    call_k      shift, and go to state 7
    while_k     shift, and go to state 8
    read_k      shift, and go to state 9
    write_k     shift, and go to state 10

    $default  reduce using rule 33 (empty_sen)

    sentence       go to state 105
    assign_sen     go to state 18
    mul_sen        go to state 19
    empty_sen      go to state 20
    condition_sen  go to state 21
    proccall_sen   go to state 22
    while_sen      go to state 23
    read_sen       go to state 24
    write_sen      go to state 25


state 86

   60 mul_read_sen: identifier .
   61             | identifier . comma_s mul_read_sen

    comma_s  shift, and go to state 106

    $default  reduce using rule 60 (mul_read_sen)


state 87

   59 read_sen: read_k l_bracket_s mul_read_sen . r_bracket_s

    r_bracket_s  shift, and go to state 107


state 88

   63 mul_write_sen: expression .
   64              | expression . comma_s mul_write_sen

    comma_s  shift, and go to state 108

    $default  reduce using rule 63 (mul_write_sen)


state 89

   62 write_sen: write_k l_bracket_s mul_write_sen . r_bracket_s

    r_bracket_s  shift, and go to state 109


state 90

    3 b_prog: const_dclr var_dclr proc_dclr . sentence

    identifier  shift, and go to state 1
    begin_k     shift, and go to state 5
    if_k        shift, and go to state 6
    call_k      shift, and go to state 7
    while_k     shift, and go to state 8
    read_k      shift, and go to state 9
    write_k     shift, and go to state 10

    $default  reduce using rule 33 (empty_sen)

    sentence       go to state 110
    assign_sen     go to state 18
    mul_sen        go to state 19
    empty_sen      go to state 20
    condition_sen  go to state 21
    proccall_sen   go to state 22
    while_sen      go to state 23
    read_sen       go to state 24
    write_sen      go to state 25


state 91

    4 b_prog: const_dclr var_dclr sentence .

    $default  reduce using rule 4 (b_prog)


state 92

    6 b_prog: const_dclr proc_dclr sentence .

    $default  reduce using rule 6 (b_prog)


state 93

    5 b_prog: var_dclr proc_dclr sentence .

    $default  reduce using rule 5 (b_prog)


state 94

   18 mul_proc_dclr: semicolon_s .
   19              | semicolon_s . proc_dclr mul_proc_dclr

    procedure_k  shift, and go to state 4

    $default  reduce using rule 18 (mul_proc_dclr)

    proc_dclr    go to state 111
    proc_header  go to state 16


state 95

   17 proc_dclr: proc_header b_prog mul_proc_dclr .

    $default  reduce using rule 17 (proc_dclr)


state 96

   13 const_def: identifier eq_s integer .

    $default  reduce using rule 13 (const_def)


state 97

   12 mul_const_def: const_def comma_s mul_const_def .

    $default  reduce using rule 12 (mul_const_def)


state 98

   16 mul_var_dclr: identifier comma_s mul_var_dclr .

    $default  reduce using rule 16 (mul_var_dclr)


state 99

   32 mul_mul_sen: sentence semicolon_s mul_mul_sen .

    $default  reduce using rule 32 (mul_mul_sen)


state 100

   45 factor: l_bracket_s expression r_bracket_s .

    $default  reduce using rule 45 (factor)


state 101

   56 condition_sen: if_k condition then_k sentence .

    $default  reduce using rule 56 (condition_sen)


state 102

   34 condition: expression relation_op expression .

    $default  reduce using rule 34 (condition)


state 103

   39 mul_expression: item p_m_op mul_expression .

    $default  reduce using rule 39 (mul_expression)


state 104

   42 mul_item: factor m_d_op mul_item .

    $default  reduce using rule 42 (mul_item)


state 105

   58 while_sen: while_k condition do_k sentence .

    $default  reduce using rule 58 (while_sen)


state 106

   61 mul_read_sen: identifier comma_s . mul_read_sen

    identifier  shift, and go to state 86

    mul_read_sen  go to state 112


state 107

   59 read_sen: read_k l_bracket_s mul_read_sen r_bracket_s .

    $default  reduce using rule 59 (read_sen)


state 108

   64 mul_write_sen: expression comma_s . mul_write_sen

    integer      shift, and go to state 35
    identifier   shift, and go to state 36
    plus_s       shift, and go to state 38
    minus_s      shift, and go to state 39
    l_bracket_s  shift, and go to state 40

    expression      go to state 88
    mul_expression  go to state 43
    item            go to state 44
    mul_item        go to state 45
    factor          go to state 46
    p_m_op          go to state 47
    mul_write_sen   go to state 113


state 109

   62 write_sen: write_k l_bracket_s mul_write_sen r_bracket_s .

    $default  reduce using rule 62 (write_sen)


state 110

    3 b_prog: const_dclr var_dclr proc_dclr sentence .

    $default  reduce using rule 3 (b_prog)


state 111

   19 mul_proc_dclr: semicolon_s proc_dclr . mul_proc_dclr

    semicolon_s  shift, and go to state 94

    mul_proc_dclr  go to state 114


state 112

   61 mul_read_sen: identifier comma_s mul_read_sen .

    $default  reduce using rule 61 (mul_read_sen)


state 113

   64 mul_write_sen: expression comma_s mul_write_sen .

    $default  reduce using rule 64 (mul_write_sen)


state 114

   19 mul_proc_dclr: semicolon_s proc_dclr mul_proc_dclr .

    $default  reduce using rule 19 (mul_proc_dclr)
